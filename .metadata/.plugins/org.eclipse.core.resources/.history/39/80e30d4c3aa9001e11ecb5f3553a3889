package com.test.java;

public class Ex02_Variable {
	public static void main(String[] args) {
		
		/*
		 - 변수 
		 : 여러 가지 값으로 변할 수 있는 수(표면상의 정의)
		 : 개발자가 명령어를 사용해 메모리를 할당 받은 공간
		 : 각 bit 마다 물리적인 주소 > 메모리 번지 (주소)
		 
		 1. 변수 생성하기
		 - 자료형 변수명;
		 
		 2. 변수 초기화 
		 - 변수명 = 값;
		 - = (대입연산자, 할당 연산자)

		 3. 변수 사용하기
		 - 출력, 연산, 조건, 기록 등..
		 - 변수명 
		 
		 */
		
		//int 국어
		int kor;
		kor = 100;
		System.out.println(kor);
		
		//학생 1명의 영어점수를 저장 한 후 화면에 다시 출력하시오.
		//1. 데이터 성질을 파악 > 영어점수
		// a. 형태 > 정수 / 실수 > 정수
		// b. 길이 > 0~100 
		
		//2. 1의 결과에 따라 적당한 자료형 선택 
		
		//3. 2의 결과 자료형으로 변수 생성하기
		
		byte eng;
		eng = 90;
		System.out.println(eng);
		
		//변수(값) 수정하기
		eng = 95; //덮어쓰기
		System.out.println(eng);
		
		//수학 점수 > 80
		byte math;
		math = 80;
		System.out.println(math);
		
		
		//변수명을 만들 때 규칙
		//1. 영문자 + 숫자 + '_' 사용한다
		//2. 숫자로 시작 불가능
		//3. 예약어(키워드) 사용 불가능
		//4. 의미있게(중요)
		
		//변수 선언하는 방식
		int n1; // 선언 > 선언 직후 > 비어 있는 상태 > 널 (null)
		n1 =100; // 초기화
		
		int n2 = 200;
		
		//지도 좌표 (x,y)
		double x1;//우리집 x 좌표
		double y1;//우리집 y 좌표
		
		
		double x2,y2; //친구집 x좌표, 친구집 y좌표
		
		//변수는 값을 가지고 있지 않은 상태에서는 어느 용도로든 사용이 불가능하다.(출력x,연산x, 사용금지)
		
		
		//식별자(변수이외의 다른 요소 ) 명명법 (패턴)\
		//1. 헝가리언 표기법
		//2. 파스칼 표기법
		//3. 캐멀 표기법
		//4. 스네이크 표기법
		//5. 케밥 표기법
		
		/*
		 1. 헝가리언 표기법
		 : 식별자를 만들 때 식별자의 접두어로 자료형을 표시하는 방법
		 : int intAge / int iAge ..등등
		 : 요즘엔 잘 사용 안 함
		 
		 2. 파스칼 표기법
		 : 식별자의 첫문자를 대문자 표기 + 나머지 문자를 소문자
		 : 2개 이상의 합성어 > 각 단어의 첫문자를 대문자로 표기
		 : 주로 클래스명 만들 때 사용
		 : int englishscore -> int EnglishScore
		 
		 3.캐멀 표기법
		 : 식별자의 첫문자를 소문자 표기 + 나머지 문자를 소문자
		 : 2개 이상의 합성어 > 각 단어의 첫문자를 대문자로 표기
		 : 주로 변수명과 메서드 만들 때 사용
		 : int mathScore; 
		 
		 4. 스네이크 표기법
		 : 전부 소문자표기
		 : 합성어 > 각단어를 '_'으로 연결
		 : 사용처가 정해져 있지 않음
		 : int english_score
		 
		 5. 케밥 표기법
		 : 전부 소문자표기
		 : 합성어 > 각단어를 '-'으로 연결
		 : 꽤 많은 언어에서는 '-'를 빼기로 인식해서 사용 불가
		 : 웹 html, css에서는 자주 씀
		 : int english-score
		  
		 */
		 // 데이터 중 일부는 값을 변화시키면 안되는 값들이 존재
		 // ex) double pi = 3.14;
		
		//final 변수 = 상수 (constant) = 이름을 붙인 변하지 않는 값
		final double pi = 3.14;
		

		
	}
}
